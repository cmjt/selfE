% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_hawkes.r
\name{fit_hawkes}
\alias{fit_hawkes}
\title{Function to fit a self-exciting Hawkes process}
\usage{
fit_hawkes(
  times,
  parameters = list(),
  model = 1,
  marks = c(rep(1, length(times))),
  tmb_silent = TRUE,
  optim_silent = TRUE,
  ...
)
}
\arguments{
\item{times}{a vector of numeric observation time points}

\item{parameters}{a list of named parameters for the chosen model
Default values used if not provided. 
(see \code{model})
"mu"--base rate of the hawkes process,
"alpha"--intensity jump after an event occurrence (\code{model} = 1)
"a_par" -- logit scale for alpha. alpha must be set so that the intensity never goes negative
 and so that alpha <= beta. (\code{model} = 2)
"beta"--exponential intensity decay}

\item{model}{a factor indicator specifying which model to fit:
\code{1}, a Hawkes process with exponential decay (default);
\code{2}, Hawkes process with a "jump" (alpha) that can be negative.}

\item{marks}{a vector of numerical marks, defaults to 1 (i.e., no marks)}

\item{tmb_silent}{logical, default `TRUE`:
TMB inner optimization tracing information will be printed.}

\item{optim_silent}{logical, default `TRUE`:
print function and parameters every iteration.}

\item{...}{arguments to pass into \code{optim()}}
}
\description{
\code{fit_hawkes} fits a range of self-exciting Hawkes processes using TMB
}
\examples{
{
\dontrun{
data(retweets_niwa, package = "stelfi")
times <- unique(sort(as.numeric(difftime(retweets_niwa, min(retweets_niwa),units = "mins"))))
params <- c(mu = 9, alpha = 3, beta = 10)
fit_hawkes(times = times, parameters = params)
}
\dontrun{
## A model with marks (ETAS-type)
data("earthquakes", package = "stelfi")
earthquakes <- earthquakes[order(earthquakes$origintime),]
earthquakes <- earthquakes[!duplicated(earthquakes$origintime), ]
times <- earthquakes$origintime
times <- as.numeric(difftime(times, min(times), units = "mins"))
marks <- earthquakes$magnitude
params <- c(mu = 3, alpha = 0.05, beta = 1)
fit_hawkes(times = times, parameters = params, marks = marks)
}
}
}
